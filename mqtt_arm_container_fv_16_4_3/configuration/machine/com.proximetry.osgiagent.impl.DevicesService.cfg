
# upload the statics to airsync.
send.statistics.to.airsync=yes

# time in seconds for a download package to be expired.
package.expiration.timeout=1000

# cloud reporting mode:
#   cloud.reporting.mode - mode of polling to the cloud - PERIODIC, ON_DEMAND
#   agent.sdk.sync.msg.interval - seconds for polling interval.
#   agent.sdk.sync.msg.interval.margin - only used in PERIODIC - seconds added to “reportingInterval” while claiming the 
#       period for the server in Synchronous Message (so that the server will wait a little longer before changing the device status to Unreachable)
cloud.reporting.mode=PERIODIC
agent.sdk.sync.msg.interval=30
agent.sdk.sync.msg.interval.margin=5

# alarms thresholds pct [0-100]
alarm.cpu.usage.threshold=90
alarm.memory.usage.threshold=90
alarm.disk.usage.threshold=90

# two step download for software update packages. 
use.two.step.download=no

# http connection timeout.
http.connection.timeout=25

# Package downloading to be auto-resumable from point of failure. 
# The user is able to configure package download retry backoff by setting package.download.retry.backoff 
# property (default value is 30 seconds). If the property is set to zero, retries are disabled.  
# The agent reports package download failure in case the connection got lost.
package.download.retry.backoff=30

# unique device ID
agent.device_id=
# Agent bootstrap info
agent.bootstrap.info=